% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ti_get_metadata.R
\name{ti_get_metadata}
\alias{ti_get_metadata}
\title{Extract image metadata}
\usage{
ti_get_metadata(path, recursive = FALSE, save_file = FALSE, file_name = "")
}
\arguments{
\item{path}{a character vector of full path names. Either a directory path or file path. If the \code{path} specified is a
directory, the function looks for all image (.jpeg/JPEG, jpg/JPG) inside and extract
the tags and bind in a single data.frame.}

\item{recursive}{logical. Should the listing recurse into directories? It is applied if
\code{path} is directory.}

\item{save_file}{logical. Extracted metadata should be write on disk?}

\item{file_name}{a character specifying the name of file to save in csv format.
If left empty and \code{save_file} is TRUE, the default name is metadata.csv. Note that
the file is not saved if \code{save_file} is FALSE, even if the file name is provided.}
}
\value{
data.frame
}
\description{
The function extracts metadata from image files located at a
specified path. The function can handle both individual image files and
directories containing multiple images. It uses the exiftool utility to read
the metadata and can optionally save the extracted metadata to a CSV file.
}
\examples{

# Define the URL of the image to be downloaded
image_url <- "https://cdn.britannica.com/02/162502-050-FEEA94DE/Vulture.jpg"

# Define the path to save the downloaded image
temp_image_path <- file.path(tempdir(), "image.jpg")

# Download the image from the internet
download.file(url = image_url, destfile = temp_image_path, mode = "wb")

# Extract metadata from the downloaded image
metadata <- ti_get_metadata(path = temp_image_path)

# Extract metadata from all images in a directory (non-recursive)
metadata_dir <- ti_get_metadata(path = tempdir(), recursive = FALSE)

}
